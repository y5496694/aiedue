rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function isTeacher() {
      return request.auth != null &&
             firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }

    function isStudent() {
      return request.auth != null &&
             firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'student';
    }

    // Book 파일: 공개 책은 교사/학생이 읽기 가능, 작성자만 쓰기 가능
    match /Book/{bookId}/{allPaths=**} {
      allow read: if request.method == 'OPTIONS' || (
        request.auth != null &&
        (
          firestore.get(/databases/(default)/documents/Book/$(bookId)).data.authorId == request.auth.uid ||
          isTeacher() ||
          (
            firestore.get(/databases/(default)/documents/Book/$(bookId)).data.isPublic == true &&
            isStudent()
          )
        )
      );

      allow write: if request.auth != null &&
        firestore.get(/databases/(default)/documents/Book/$(bookId)).data.authorId == request.auth.uid;
    }

    // 스케치북 파일 (스케치 ID 기반)
    match /sketches/{fileId} {
      allow read, write: if request.method == 'OPTIONS' || request.auth != null;
    }

    // 그 외 경로: 로그인한 사용자에게만 접근 허용
    match /{allPaths=**} {
      allow read, write: if request.method == 'OPTIONS' || request.auth != null;
    }
  }
}
